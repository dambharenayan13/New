*******USESTATE*******

import React, { useState } from "react";
function Counter(){
    const[count,setCount]=useState(0);
    return(
        <div>
            <h2>{count}</h2>
            <button onClick={()=>setCount(count+1)}>Increment</button>
            <button onClick={()=>setCount(count -1)}>Decrement</button>
            <button onClick={()=>setCount(0)}>Reset</button>
        </div>
    );
}
export default Counter;

USEEFFECT****************************************************************************************************************************
import React, { useEffect, useState } from "react";
function Timer(){
const[seconds,setSeconds]=useState();

useEffect(()=>{
    const interval=setInterval(()=>{
        setSeconds(prev=>prev+1);
    },1000);

    return()=>classInterval(interval);
},[]);
return <h2>Timer:{seconds}s</h2>;
}
export default Timer;

USECALLBACK************************************************************************************
import React, { useCallback, useState } from "react";
function Child({onClick}){
    console.log("Child rendered");
    return<button onClick={onClick}>Increment</button>
}
function Parent(){
    const[cunt,setCount]=useState(0);
    const increment=useCallback(()=>{
        setCount(prev=>prev+1);
    },[]);
    return(
        <div>
            <h2>Count:{count}</h2>
            <Child onClick={increment}/>
        </div>
       );
}
export default Parent;

PROPS*******************************************************************************************

function Welcome({name,age}){
    return<h2>Hello{name},you are {age}years old</h2>;
}
function App(){
    return <h2>Welcome name="Nayan" afe={age}</h2>;
}
export default App;  

CLASS LIFECYCLE*****************************************************************************
import React from "react";

class LifecycleDemo extends React.Component{
    constructor(){
        super();
        this.state={count:0};
        console.log("Constructor");
    }
    componentDidMount(){
        console.log("Component mounted");
    }
    componentDidUpdate(){
        console.log("Component Updated");
    }
    componentWillUnmount(){
        console.log("Component Unmount");
    }
    render(){
        return(
            <div>
                <h2>Count:{this.state.count}</h2>
                <button onClick={()=>this.setState({count:this.state.count+1})}>Increment</button>
            </div>
        );

    }

}
export default LifecycleDemo;

COMBINING ALL*******************************************************************************************************

import React, { useCallback, useEffect, useState } from "react";

function CountApp(){
    const[count,setCount]=useState(0);

    useEffect(()=>{
        console.log("Mounted");
        return()=>console.log("unmounted");
    },[]);

    const increment=useCallback(()=>{
        setCount(prev=>prev+1);
    },[]);

    return(
        <div>
            <h2>Count:{count}</h2>
            <button onClick={increment}>Increment</button>
        </div>
    );
}
export default CountApp; 

Password********************************************************************************************************
import { useState } from "react";

export default function PasswordGenerator() {
    const [length, setLength] = useState(8);
    const [password, setPassword] = useState("");

    function generatePassword() {
        const chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789@#$!";
        let pwd = "";
        for (let i = 0; i < length; i++) {
            const randomIndex = Math.floor(Math.random() * chars.length);
            pwd += chars[randomIndex];
        }
        setPassword(pwd);
    }

    return (
        <div>
            <h3>Password Generator</h3>
            <input
                type="number"
                value={length}
                onChange={(e) => setLength(Number(e.target.value))}
                placeholder="Length"
            />
            <button onClick={generatePassword}>Generate</button>
            <p>{password}</p>
        </div>
    );
}


***********************************************************************************************************************

AXIOUS

import { useEffect, useState } from "react";
import axios from "axios"; 

export default function DemoAxios() {
  const [posts, setPosts] = useState([]);
  const [error, setError] = useState(null);

  useEffect(() => {
    axios
      .get("https://jsonplaceholder.typicode.com/posts")
      .then((response) => {
        setPosts(response.data);
        setError(null);
      })
      .catch((err) => {
        setError(err.message);
        setPosts([]);
      })

  }, []); 

  
  return (
    <div>
      <h1>Posts</h1>
      <table>
        <thead>
          <tr>
            <th>ID</th>
            <th>User ID</th>
            <th>Title</th>
            <th>Body</th>
          </tr>
        </thead>
        <tbody>
          {posts.map((post) => (
            <tr key={post.id}> 
              <td>{post.id}</td>
              <td>{post.userId}</td>
              <td>{post.title}</td>
              <td>{post.body.substring(0, 100) + '...'}</td> 
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
}

AXIOUSget************************************************************************************************************************

import React, { useEffect, useState } from "react";
import axios from "axios";

const GetData = () => {
    const [data, setData] = useState([]);

    const [error, setError] = useState(null);

    useEffect(() => {
        // Make GET request to fetch data
        axios
            .get("https://jsonplaceholder.typiode.com/posts")
            .then((response) => {
                setData(response.data);
            })
            .catch((err) => {
                setError(err.message);

            });
    }, []);


    if (error) return <div>Error: {error}</div>;

    return (
        <div>
            <h1>Posts</h1>
            <ul>
                {data.map((post) => (
                    <li key={post.id}>{post.title}</li>
                ))}
            </ul>
        </div>
    );
};

export default GetData;

Axiousdemo****************************************************************************************************
import axios from 'axios'
import { useState } from 'react';

// npm install axios    array   logic 
//  node js    RestAPI    url 
// data  display 
// map()/// iterate data 100  predefined 

// lifecycle useEffect []

export default function DemoAjax() {
    let [jsonData, setData] = useState([]);
    let p = axios.get("https://jsonplaceholder.typicode.com//posts");

    p.then((response) => {
        //console.log(response.data);
        setData(response.data);
    })


}

**********************************************************ContactUs***********************************************************

import React, { Component } from 'react';

class ContactUs extends Component {
  constructor(props) {
    super(props);
    this.state = {
      name: '',
      email: '',
      message: ''
    };
  }

  handleInputChange = (event) => {
    const { name, value } = event.target;
    this.setState({
      [name]: value
    });
  };

  handleSubmit = (event) => {
    event.preventDefault();
    alert(`Thank you ${this.state.name}! Your message has been received.`);
    this.setState({
      name: '',
      email: '',
      message: ''
    });
  };

  render() {
    return (
      <div >
        <h2>Contact Us</h2>
        
        
      </div>
    );
  }
}

export default ContactUs;